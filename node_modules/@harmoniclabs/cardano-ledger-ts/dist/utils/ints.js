"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.u32 = exports.unsafeForceUInt = exports.forceBigUInt = exports.maybeBigUint = exports.canBeUInteger = void 0;
var _0n = BigInt(0);
function canBeUInteger(something) {
    return ((typeof something === "number" && something === (something >>> 0))
        || (typeof something === "bigint" && something >= _0n));
}
exports.canBeUInteger = canBeUInteger;
function maybeBigUint(toForce) {
    return toForce === undefined ? undefined : forceBigUInt(toForce);
}
exports.maybeBigUint = maybeBigUint;
function forceBigUInt(toForce) {
    return typeof toForce === "number" ? BigInt(toForce >>> 0) : (toForce >= _0n ? toForce : -toForce);
}
exports.forceBigUInt = forceBigUInt;
;
function unsafeForceUInt(toForce) {
    if (!canBeUInteger(toForce)) {
        // console.error( toForce );
        throw new Error("trying to convert an integer to an unsigned Integer, the number was negative");
    }
    return Number(toForce);
}
exports.unsafeForceUInt = unsafeForceUInt;
function u32(uint) {
    return Number(uint) >>> 0;
}
exports.u32 = u32;
