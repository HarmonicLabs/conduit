import { CanBeCborString, CborArray, CborObj, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { CanBeUInteger } from "../../../utils/ints.js";
export interface IProtocolVersion {
    major: CanBeUInteger;
    minor: CanBeUInteger;
}
export declare function isIProtocolVersion(thing: any): thing is IProtocolVersion;
export declare class ProtocolVersion implements IProtocolVersion, ToCbor {
    readonly cborRef: SubCborRef | undefined;
    readonly major: number;
    readonly minor: number;
    constructor(v: IProtocolVersion, cborRef?: SubCborRef | undefined);
    clone(): ProtocolVersion;
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): ProtocolVersion;
    static fromCborObj(cbor: CborObj, _originalBytes?: Uint8Array): ProtocolVersion;
}
