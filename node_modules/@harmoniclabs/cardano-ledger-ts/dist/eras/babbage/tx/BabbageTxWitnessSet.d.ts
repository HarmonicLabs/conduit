import { ToCbor, SubCborRef, CborString, CborObj, CanBeCborString } from "@harmoniclabs/cbor";
import { Data } from "@harmoniclabs/plutus-data";
import { Script, ScriptType } from "../../../script/index.js";
import { Hash28 } from "../../../hashes/index.js";
import { VKeyWitness, BootstrapWitness } from "../../common/index.js";
import { BabbageTxRedeemer } from "./index.js";
import { ToJson } from "../../../utils/ToJson.js";
export interface IBabbageTxWitnessSet {
    vkeyWitnesses?: VKeyWitness[];
    nativeScripts?: Script<ScriptType.NativeScript>[];
    bootstrapWitnesses?: BootstrapWitness[];
    plutusV1Scripts?: Script<ScriptType.PlutusV1>[];
    datums?: Data[];
    redeemers?: BabbageTxRedeemer[];
    plutusV2Scripts?: Script<ScriptType.PlutusV2>[];
}
export declare function isIBabbageTxWitnessSet(set: object): set is IBabbageTxWitnessSet;
export declare class BabbageTxWitnessSet implements IBabbageTxWitnessSet, ToCbor, ToJson {
    readonly cborRef: SubCborRef | undefined;
    readonly vkeyWitnesses?: VKeyWitness[];
    readonly nativeScripts?: Script<ScriptType.NativeScript>[];
    readonly bootstrapWitnesses?: BootstrapWitness[];
    readonly plutusV1Scripts?: Script<ScriptType.PlutusV1>[];
    readonly datums?: Data[];
    readonly redeemers?: BabbageTxRedeemer[];
    readonly plutusV2Scripts?: Script<ScriptType.PlutusV2>[];
    readonly addVKeyWitness: (vkeyWit: VKeyWitness) => void;
    readonly isComplete: boolean;
    constructor(witnesses: IBabbageTxWitnessSet, cborRef?: SubCborRef | undefined, allRequiredSigners?: Hash28[] | undefined);
    toJSON(): {
        vkeyWitnesses: {
            vkey: string;
            signature: string;
        }[] | undefined;
        nativeScripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.NativeScript;
            description: string;
            cborHex: string;
        })[] | undefined;
        bootstrapWitnesses: {
            pubKey: string;
            signature: string;
            chainCode: string;
            attributes: string;
        }[] | undefined;
        plutusV1Scripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.PlutusV1;
            description: string;
            cborHex: string;
        })[] | undefined;
        datums: any[] | undefined;
        redeemers: {
            tag: "Spend" | "Mint" | "Cert" | "Withdraw";
            index: number;
            execUnits: {
                steps: string;
                memory: string;
            };
            data: any;
        }[] | undefined;
        plutusV2Scripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.PlutusV2;
            description: string;
            cborHex: string;
        })[] | undefined;
    };
    toJson(): {
        vkeyWitnesses: {
            vkey: string;
            signature: string;
        }[] | undefined;
        nativeScripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.NativeScript;
            description: string;
            cborHex: string;
        })[] | undefined;
        bootstrapWitnesses: {
            pubKey: string;
            signature: string;
            chainCode: string;
            attributes: string;
        }[] | undefined;
        plutusV1Scripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.PlutusV1;
            description: string;
            cborHex: string;
        })[] | undefined;
        datums: any[] | undefined;
        redeemers: {
            tag: "Spend" | "Mint" | "Cert" | "Withdraw";
            index: number;
            execUnits: {
                steps: string;
                memory: string;
            };
            data: any;
        }[] | undefined;
        plutusV2Scripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.PlutusV2;
            description: string;
            cborHex: string;
        })[] | undefined;
    };
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborObj;
    static fromCbor(cStr: CanBeCborString): BabbageTxWitnessSet;
    static fromCborObj(cObj: CborObj): BabbageTxWitnessSet;
}
