import { CborArray, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { DataConstr, ToData } from "@harmoniclabs/plutus-data";
import { CanBeHash28, Hash28 } from "../../../../hashes/index.js";
import { ITxWithdrawals, TxWithdrawals } from "../../../common/ledger/index.js";
import { IGovAction } from "./IGovAction.js";
import { GovActionType } from "./GovActionType.js";
import { ToDataVersion } from "../../../../toData/defaultToDataVersion.js";
export interface IGovActionTreasuryWithdrawals {
    withdrawals: ITxWithdrawals | TxWithdrawals;
    policyHash?: CanBeHash28 | undefined;
}
export declare function isIGovActionTreasuryWithdrawals(stuff: any): stuff is IGovActionTreasuryWithdrawals;
export declare class GovActionTreasuryWithdrawals implements IGovAction, IGovActionTreasuryWithdrawals, ToCbor, ToData {
    readonly cborRef: SubCborRef | undefined;
    readonly govActionType: GovActionType.TreasuryWithdrawals;
    readonly withdrawals: TxWithdrawals;
    readonly policyHash: Hash28 | undefined;
    constructor({ withdrawals, policyHash }: IGovActionTreasuryWithdrawals, cborRef?: SubCborRef | undefined);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    toData(v?: ToDataVersion): DataConstr;
}
