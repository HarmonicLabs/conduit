"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Voter = exports.eqIVoter = exports.isIVoter = exports.isVoterKind = exports.VoterKind = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var uint8array_utils_1 = require("@harmoniclabs/uint8array-utils");
var plutus_data_1 = require("@harmoniclabs/plutus-data");
var hashes_1 = require("../../../hashes/index.js");
var credentials_1 = require("../../../credentials/index.js");
var VoterKind;
(function (VoterKind) {
    VoterKind[VoterKind["ConstitutionalCommitteKeyHash"] = 0] = "ConstitutionalCommitteKeyHash";
    VoterKind[VoterKind["ConstitutionalCommitteScript"] = 1] = "ConstitutionalCommitteScript";
    VoterKind[VoterKind["DRepKeyHash"] = 3] = "DRepKeyHash";
    VoterKind[VoterKind["DRepScript"] = 4] = "DRepScript";
    VoterKind[VoterKind["StakingPoolKeyHash"] = 5] = "StakingPoolKeyHash";
})(VoterKind = exports.VoterKind || (exports.VoterKind = {}));
Object.freeze(VoterKind);
function isVoterKind(stuff) {
    var n = Number(stuff);
    return (typeof stuff === "number" &&
        stuff >= 0 && stuff <= 5 &&
        stuff === Math.round(stuff));
}
exports.isVoterKind = isVoterKind;
function isIVoter(stuff) {
    if (!(0, obj_utils_1.isObject)(stuff))
        return false;
    return (isVoterKind(stuff.kind) &&
        (0, hashes_1.canBeHash28)(stuff.hash));
}
exports.isIVoter = isIVoter;
function eqIVoter(a, b) {
    if (!(0, obj_utils_1.isObject)(a))
        return false;
    if (!(0, obj_utils_1.isObject)(b))
        return false;
    try {
        return (isVoterKind(a.kind) && a.kind === b.kind &&
            (0, hashes_1.canBeHash28)(a.hash) &&
            (0, hashes_1.canBeHash28)(b.hash) &&
            (0, uint8array_utils_1.uint8ArrayEq)(new hashes_1.Hash28(a.hash).toBuffer(), new hashes_1.Hash28(b.hash).toBuffer()));
    }
    catch (_a) {
        return false;
    }
}
exports.eqIVoter = eqIVoter;
var Voter = /** @class */ (function () {
    function Voter(_a, cborRef) {
        var kind = _a.kind, hash = _a.hash;
        if (cborRef === void 0) { cborRef = undefined; }
        this.cborRef = cborRef;
        Object.defineProperties(this, {
            kind: { value: kind, writable: false, enumerable: true, configurable: false },
            hash: { value: new hashes_1.Hash28(hash), writable: false, enumerable: true, configurable: false },
        });
    }
    Voter.ConstitutionalCommitteKeyHash = function (hash) {
        return new Voter({ kind: VoterKind.ConstitutionalCommitteKeyHash, hash: hash });
    };
    Voter.ConstitutionalCommitteScript = function (hash) {
        return new Voter({ kind: VoterKind.ConstitutionalCommitteScript, hash: hash });
    };
    Voter.DRepKeyHash = function (hash) {
        return new Voter({ kind: VoterKind.DRepKeyHash, hash: hash });
    };
    Voter.DRepScript = function (hash) {
        return new Voter({ kind: VoterKind.DRepScript, hash: hash });
    };
    Voter.StakingPoolKeyHash = function (hash) {
        return new Voter({ kind: VoterKind.StakingPoolKeyHash, hash: hash });
    };
    Voter.prototype.toCborBytes = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return this.cborRef.toBuffer();
        return this.toCbor().toBuffer();
    };
    Voter.prototype.toCbor = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return new cbor_1.CborString(this.cborRef.toBuffer());
        }
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    Voter.prototype.toCborObj = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return cbor_1.Cbor.parse(this.cborRef.toBuffer());
        return new cbor_1.CborArray([
            new cbor_1.CborUInt(this.kind),
            new cbor_1.CborBytes(this.hash.toBuffer())
        ]);
    };
    Voter.prototype.toData = function (version) {
        version = "v3"; // only supported for voter so far
        var idx = ((this.kind === VoterKind.ConstitutionalCommitteKeyHash ||
            this.kind === VoterKind.ConstitutionalCommitteScript) ? 0 : (this.kind === VoterKind.DRepKeyHash ||
            this.kind === VoterKind.DRepScript
            ? 1 : 2));
        var arg = ((this.kind === VoterKind.ConstitutionalCommitteKeyHash ||
            this.kind === VoterKind.DRepKeyHash) ?
            credentials_1.Credential.keyHash(this.hash).toData(version) :
            (this.kind === VoterKind.ConstitutionalCommitteScript ||
                this.kind === VoterKind.DRepScript ?
                credentials_1.Credential.script(this.hash).toData(version) :
                this.hash.toData(version)));
        return new plutus_data_1.DataConstr(idx, [arg]);
    };
    return Voter;
}());
exports.Voter = Voter;
