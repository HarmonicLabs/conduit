import { CborArray, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { DataConstr, ToData } from "@harmoniclabs/plutus-data";
import { Coin, StakeAddress } from "../../common/ledger/index.js";
import { Anchor, IAnchor } from "./Anchor.js";
import { GovActionLike } from "./GovAction/GovActionLike.js";
import { GovAction } from "./GovAction/index.js";
import { ToDataVersion } from "../../../toData/defaultToDataVersion.js";
export interface IProposalProcedure {
    deposit: Coin;
    rewardAccount: StakeAddress;
    govAction: GovActionLike;
    anchor: IAnchor;
}
export declare function isIProposalProcedure(stuff: any): stuff is IProposalProcedure;
export declare class ProposalProcedure implements IProposalProcedure, ToCbor, ToData {
    readonly cborRef: SubCborRef | undefined;
    readonly deposit: bigint;
    readonly rewardAccount: StakeAddress;
    readonly govAction: GovAction;
    readonly anchor: Anchor;
    constructor({ deposit, rewardAccount, govAction, anchor }: IProposalProcedure, cborRef?: SubCborRef | undefined);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    toData(v?: ToDataVersion): DataConstr;
}
