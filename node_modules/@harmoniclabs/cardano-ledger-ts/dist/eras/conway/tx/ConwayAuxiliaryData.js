"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConwayAuxiliaryData = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var crypto_1 = require("@harmoniclabs/crypto");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var hashes_1 = require("../../../hashes/index.js");
var NativeScript_1 = require("../../../script/NativeScript.js");
var script_1 = require("../../../script/index.js");
var TxMetadata_1 = require("../../common/TxMetadata.js");
var getSubCborRef_1 = require("../../../utils/getSubCborRef.js");
var InvalidCborFormatError_1 = require("../../../utils/InvalidCborFormatError.js");
function scriptArrToCbor(scripts) {
    return new cbor_1.CborArray(scripts.map(function (script) { return new cbor_1.CborBytes(script.bytes); }));
}
var ConwayAuxiliaryData = /** @class */ (function () {
    function ConwayAuxiliaryData(auxData, cborRef) {
        if (cborRef === void 0) { cborRef = undefined; }
        this.cborRef = cborRef;
        if (!((0, obj_utils_1.hasOwn)(auxData, "metadata")))
            throw new Error("'ConwayAuxiliaryData' is missing 'metadata' field");
        var metadata = auxData.metadata, nativeScripts = auxData.nativeScripts, plutusV1Scripts = auxData.plutusV1Scripts, plutusV2Scripts = auxData.plutusV2Scripts, plutusV3Scripts = auxData.plutusV3Scripts;
        // -------------------------------- native scripts -------------------------------- //
        if (!(metadata === undefined ||
            metadata instanceof TxMetadata_1.TxMetadata))
            throw new Error("'ConwayAuxiliaryData' :: 'metadata' field was not instance of 'TxMetadata'");
        this.metadata = metadata;
        // -------------------------------- native scripts -------------------------------- //
        if (nativeScripts !== undefined) {
            if (!(Array.isArray(nativeScripts) &&
                nativeScripts.every(function (script) {
                    return true;
                })))
                throw new Error("invalid nativeScripts field");
            this.nativeScripts = nativeScripts === null || nativeScripts === void 0 ? void 0 : nativeScripts.map(function (nativeScript) {
                return nativeScript instanceof script_1.Script
                    ? nativeScript :
                    new script_1.Script({
                        scriptType: script_1.ScriptType.NativeScript,
                        bytes: nativeScript
                    });
            });
        }
        else {
            this.nativeScripts = undefined;
        }
        // -------------------------------- plutus v1 -------------------------------- //
        if (plutusV1Scripts !== undefined) {
            if (!(Array.isArray(plutusV1Scripts) &&
                plutusV1Scripts.every(function (script) {
                    return true;
                })))
                throw new Error("invalid plutusV1Scripts field");
            this.plutusV1Scripts = plutusV1Scripts === null || plutusV1Scripts === void 0 ? void 0 : plutusV1Scripts.map(function (plutusScript) {
                return plutusScript instanceof script_1.Script
                    ? plutusScript :
                    new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV1,
                        bytes: plutusScript
                    });
            });
        }
        else {
            this.plutusV1Scripts = undefined;
        }
        // -------------------------------- plutus v2 -------------------------------- //
        if (plutusV2Scripts !== undefined) {
            if (!(Array.isArray(plutusV2Scripts) &&
                plutusV2Scripts.every(function (script) {
                    return true;
                })))
                throw new Error("invalid plutusV2Scripts field");
            this.plutusV2Scripts = plutusV2Scripts === null || plutusV2Scripts === void 0 ? void 0 : plutusV2Scripts.map(function (plutusScript) {
                return plutusScript instanceof script_1.Script
                    ? plutusScript :
                    new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV2,
                        bytes: plutusScript
                    });
            });
        }
        else {
            this.plutusV2Scripts = undefined;
        }
        // -------------------------------- plutus v3 -------------------------------- //
        if (plutusV3Scripts !== undefined) {
            if (!(Array.isArray(plutusV3Scripts) &&
                plutusV3Scripts.every(function (script) {
                    return true;
                })))
                throw new Error("invalid plutusV3Scripts field");
            this.plutusV3Scripts = plutusV3Scripts === null || plutusV3Scripts === void 0 ? void 0 : plutusV3Scripts.map(function (plutusScript) {
                return plutusScript instanceof script_1.Script
                    ? plutusScript :
                    new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV3,
                        bytes: plutusScript
                    });
            });
        }
        else {
            this.plutusV3Scripts = undefined;
        }
        this.cborRef = cborRef !== null && cborRef !== void 0 ? cborRef : (0, getSubCborRef_1.subCborRefOrUndef)(auxData);
    }
    Object.defineProperty(ConwayAuxiliaryData.prototype, "hash", {
        get: function () {
            if (this._hash instanceof hashes_1.AuxiliaryDataHash)
                return this._hash;
            this._hash = new hashes_1.AuxiliaryDataHash(new Uint8Array((0, crypto_1.blake2b_256)(this.toCbor().toBuffer())));
            return this._hash;
        },
        enumerable: false,
        configurable: true
    });
    ConwayAuxiliaryData.prototype.toCborBytes = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return this.cborRef.toBuffer();
        return this.toCbor().toBuffer();
    };
    ConwayAuxiliaryData.prototype.toCbor = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return new cbor_1.CborString(this.cborRef.toBuffer());
        }
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    ConwayAuxiliaryData.prototype.toCborObj = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return cbor_1.Cbor.parse(this.cborRef.toBuffer());
        return new cbor_1.CborTag(259, new cbor_1.CborMap([
            this.metadata === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(0),
                    v: this.metadata.toCborObj()
                },
            this.nativeScripts === undefined || this.nativeScripts.length === 0 ? undefined :
                {
                    k: new cbor_1.CborUInt(1),
                    v: scriptArrToCbor(this.nativeScripts)
                },
            this.plutusV1Scripts === undefined || this.plutusV1Scripts.length === 0 ? undefined :
                {
                    k: new cbor_1.CborUInt(2),
                    v: scriptArrToCbor(this.plutusV1Scripts)
                },
            this.plutusV2Scripts === undefined || this.plutusV2Scripts.length === 0 ? undefined :
                {
                    k: new cbor_1.CborUInt(3),
                    v: scriptArrToCbor(this.plutusV2Scripts)
                },
            this.plutusV3Scripts === undefined || this.plutusV3Scripts.length === 0 ? undefined :
                {
                    k: new cbor_1.CborUInt(4),
                    v: scriptArrToCbor(this.plutusV3Scripts)
                }
        ].filter(function (elem) { return elem !== undefined; })));
    };
    ConwayAuxiliaryData.fromCbor = function (cStr) {
        return ConwayAuxiliaryData.fromCborObj(cbor_1.Cbor.parse((0, cbor_1.forceCborString)(cStr), { keepRef: true }));
    };
    ConwayAuxiliaryData.fromCborObj = function (cObj) {
        var _a;
        // shelley; metadata only
        if ("data" in cObj && cObj.data instanceof cbor_1.CborMap) {
            return new ConwayAuxiliaryData({
                metadata: TxMetadata_1.TxMetadata.fromCborObj(cObj.data)
            });
        }
        // shelley multi assets; metadata + native scripts
        if (cObj instanceof cbor_1.CborArray) {
            if (!(cObj.array[1] instanceof cbor_1.CborArray
            // && cObj.array[1].length >= 5               
            ))
                throw new InvalidCborFormatError_1.InvalidCborFormatError("ConwayAuxiliaryData");
            return new ConwayAuxiliaryData({
                metadata: TxMetadata_1.TxMetadata.fromCborObj(cObj.array[0]),
                nativeScripts: cObj.array[1].array.map(NativeScript_1.nativeScriptFromCborObj)
            });
        }
        console.log("ConwayAuxiliaryData.fromCborObj", cObj);
        if (!(cObj instanceof cbor_1.CborTag
            && cObj.data instanceof cbor_1.CborMap
        // && cObj.data.map.length >= 5
        ))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("ConwayAuxiliaryData");
        var fields = new Array(5).fill(undefined);
        var _loop_1 = function (i) {
            var v = ((_a = cObj.data.map.find(function (_a) {
                var k = _a.k;
                return k instanceof cbor_1.CborUInt && Number(k.num) === i;
            })) !== null && _a !== void 0 ? _a : { v: undefined }).v;
            if (v === undefined)
                return "continue";
            fields[i] = v;
        };
        for (var i = 0; i < 5; i++) {
            _loop_1(i);
        }
        // console.log("fields", fields);
        var _b = __read(fields, 5), _metadata = _b[0], _native = _b[1], _pV1 = _b[2], _pV2 = _b[3], _pV3 = _b[4];
        // console.log("_native", _native);
        if (_native !== undefined && !(_native instanceof cbor_1.CborArray))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("AlonzoAuxiliaryData native");
        if (_pV1 !== undefined && !(_pV1 instanceof cbor_1.CborArray))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("AlonzoAuxiliaryData pV1");
        if (_pV2 !== undefined && !(_pV2 instanceof cbor_1.CborArray))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("AlonzoAuxiliaryData pV2");
        if (_pV3 !== undefined && !(_pV3 instanceof cbor_1.CborArray))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("AlonzoAuxiliaryData pV3");
        return new ConwayAuxiliaryData({
            metadata: _metadata === undefined ? undefined : TxMetadata_1.TxMetadata.fromCborObj(_metadata),
            nativeScripts: _native === undefined ? undefined :
                _native.array.map(function (nativeCborObj) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.NativeScript,
                        bytes: cbor_1.Cbor.encode(nativeCborObj).toBuffer()
                    });
                }),
            plutusV1Scripts: _pV1 === undefined ? undefined :
                _pV1.array.map(function (cbor) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV1,
                        bytes: cbor_1.Cbor.encode(cbor).toBuffer()
                    });
                }),
            plutusV2Scripts: _pV2 === undefined ? undefined :
                _pV2.array.map(function (cbor) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV2,
                        bytes: cbor_1.Cbor.encode(cbor).toBuffer()
                    });
                }),
            plutusV3Scripts: _pV3 === undefined ? undefined :
                _pV3.array.map(function (cbor) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV3,
                        bytes: cbor_1.Cbor.encode(cbor).toBuffer()
                    });
                })
        }, (0, getSubCborRef_1.getSubCborRef)(cObj));
    };
    ConwayAuxiliaryData.prototype.toJSON = function () { return this.toJson(); };
    ConwayAuxiliaryData.prototype.toJson = function () {
        var _a, _b, _c, _d, _e;
        return {
            metadata: (_a = this.metadata) === null || _a === void 0 ? void 0 : _a.toJson(),
            nativeScripts: (_b = this.nativeScripts) === null || _b === void 0 ? void 0 : _b.map(function (s) { return s.toJson(); }),
            plutusV1Scripts: (_c = this.plutusV1Scripts) === null || _c === void 0 ? void 0 : _c.map(function (s) { return s.toJson(); }),
            plutusV2Scripts: (_d = this.plutusV2Scripts) === null || _d === void 0 ? void 0 : _d.map(function (s) { return s.toJson(); }),
            plutusV3Scripts: (_e = this.plutusV2Scripts) === null || _e === void 0 ? void 0 : _e.map(function (s) { return s.toJson(); })
        };
    };
    return ConwayAuxiliaryData;
}());
exports.ConwayAuxiliaryData = ConwayAuxiliaryData;
