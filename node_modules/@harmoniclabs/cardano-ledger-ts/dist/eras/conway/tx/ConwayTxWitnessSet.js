"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConwayTxWitnessSet = exports.isIConwayTxWitnessSet = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var plutus_data_1 = require("@harmoniclabs/plutus-data");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var script_1 = require("../../../script/index.js");
var hashes_1 = require("../../../hashes/index.js");
var ConwayTxRedeemer_1 = require("./ConwayTxRedeemer.js");
var VKeyWitness_1 = require("../../common/VKeyWitness.js");
var getCborSet_1 = require("../../../utils/getCborSet.js");
var getSubCborRef_1 = require("../../../utils/getSubCborRef.js");
var InvalidCborFormatError_1 = require("../../../utils/InvalidCborFormatError.js");
var BootstrapWitness_1 = require("../../common/BootstrapWitness.js");
;
function isUndefOrCheckedArr(stuff, arrayElemCheck) {
    return (stuff === undefined || (Array.isArray(stuff) &&
        stuff.every(arrayElemCheck)));
}
function isIConwayTxWitnessSet(set) {
    if (!(0, obj_utils_1.isObject)(set))
        return false;
    var _a = set, vkeyWitnesses = _a.vkeyWitnesses, nativeScripts = _a.nativeScripts, bootstrapWitnesses = _a.bootstrapWitnesses, plutusV1Scripts = _a.plutusV1Scripts, datums = _a.datums, redeemers = _a.redeemers, plutusV2Scripts = _a.plutusV2Scripts, plutusV3Scripts = _a.plutusV3Scripts;
    return (isUndefOrCheckedArr(vkeyWitnesses, function (vkeyWit) { return vkeyWit instanceof VKeyWitness_1.VKeyWitness; }) &&
        isUndefOrCheckedArr(nativeScripts, function (ns) { return ns instanceof script_1.Script && ns.type === script_1.ScriptType.NativeScript; }) &&
        isUndefOrCheckedArr(bootstrapWitnesses, function (bootWit) { return bootWit instanceof BootstrapWitness_1.BootstrapWitness; }) &&
        isUndefOrCheckedArr(plutusV1Scripts, function (pv1) { return pv1 instanceof script_1.Script && pv1.type === script_1.ScriptType.PlutusV1; }) &&
        isUndefOrCheckedArr(datums, plutus_data_1.isData) &&
        isUndefOrCheckedArr(redeemers, function (rdmr) { return rdmr instanceof ConwayTxRedeemer_1.ConwayTxRedeemer; }) &&
        isUndefOrCheckedArr(plutusV2Scripts, function (pv2) { return pv2 instanceof script_1.Script && pv2.type === script_1.ScriptType.PlutusV2; }) &&
        isUndefOrCheckedArr(plutusV3Scripts, function (pv3) { return pv3 instanceof script_1.Script && pv3.type === script_1.ScriptType.PlutusV3; }));
}
exports.isIConwayTxWitnessSet = isIConwayTxWitnessSet;
var ConwayTxWitnessSet = /** @class */ (function () {
    function ConwayTxWitnessSet(witnesses, cborRef, allRequiredSigners) {
        if (cborRef === void 0) { cborRef = undefined; }
        if (allRequiredSigners === void 0) { allRequiredSigners = undefined; }
        var _this = this;
        var _a;
        this.cborRef = cborRef;
        if (!(isIConwayTxWitnessSet(witnesses)))
            throw new Error("invalid witnesses passed");
        var defGetter = function (name, get) {
            Object.defineProperty(_this, name, {
                get: get,
                set: function () { },
                enumerable: true,
                configurable: false
            });
            /*
            definePropertyIfNotPresent(
                this, name,
                {
                    get,
                    set: () => {},
                    enumerable: true,
                    configurable: false
                }
            )
            */
        };
        function cloneArr(arr) {
            var _a;
            return (_a = arr === null || arr === void 0 ? void 0 : arr.map(function (element) { return element.clone(); })) !== null && _a !== void 0 ? _a : [];
        }
        function defGetterArr(name, elems) {
            var _elems = elems !== null && elems !== void 0 ? elems : [];
            defGetter(name, function () { return _elems.length === 0 ? undefined : cloneArr(_elems); });
        }
        var vkeyWitnesses = witnesses.vkeyWitnesses, nativeScripts = witnesses.nativeScripts, bootstrapWitnesses = witnesses.bootstrapWitnesses, plutusV1Scripts = witnesses.plutusV1Scripts, datums = witnesses.datums, redeemers = witnesses.redeemers, plutusV2Scripts = witnesses.plutusV2Scripts, plutusV3Scripts = witnesses.plutusV3Scripts;
        var _vkeyWits = (_a = vkeyWitnesses === null || vkeyWitnesses === void 0 ? void 0 : vkeyWitnesses.map(function (wit) { return wit.clone(); })) !== null && _a !== void 0 ? _a : [];
        defGetterArr("vkeyWitnesses", _vkeyWits);
        defGetterArr("bootstrapWitnesses", bootstrapWitnesses);
        defGetterArr("datums", datums);
        defGetterArr("nativeScripts", nativeScripts);
        defGetterArr("plutusV1Scripts", plutusV1Scripts);
        defGetterArr("plutusV2Scripts", plutusV2Scripts);
        defGetterArr("redeemers", redeemers);
        defGetterArr("plutusV3Scripts", plutusV3Scripts);
        var _reqSigs = Array.isArray(allRequiredSigners) && allRequiredSigners.every(function (reqSig) { return reqSig instanceof hashes_1.Hash28; }) ?
            allRequiredSigners.map(function (sig) { return sig.toString(); }) :
            undefined;
        var noRequiredSigs = _reqSigs === undefined;
        Object.defineProperty(this, "isComplete", {
            get: function () { return noRequiredSigs ||
                _reqSigs.every(function (sig) {
                    return _vkeyWits.some(function (wit) { return wit.vkey.hash.toString() === sig; });
                }); },
            set: function () { },
            configurable: false,
            enumerable: true
        });
        this.addVKeyWitness = function (vkeyWit) {
            _vkeyWits.push(vkeyWit.clone());
        };
        /* DONE: this.cboRref params */
        this.cborRef = cborRef !== null && cborRef !== void 0 ? cborRef : (0, getSubCborRef_1.subCborRefOrUndef)(witnesses);
    }
    ConwayTxWitnessSet.prototype.toJSON = function () { return this.toJson(); };
    ConwayTxWitnessSet.prototype.toJson = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        return {
            vkeyWitnesses: (_a = this.vkeyWitnesses) === null || _a === void 0 ? void 0 : _a.map(function (vkWit) { return vkWit.toJson(); }),
            nativeScripts: (_b = this.nativeScripts) === null || _b === void 0 ? void 0 : _b.map(function (ns) { return ns.toJson(); }),
            bootstrapWitnesses: (_c = this.bootstrapWitnesses) === null || _c === void 0 ? void 0 : _c.map(function (bWit) { return bWit.toJson(); }),
            plutusV1Scripts: (_d = this.plutusV1Scripts) === null || _d === void 0 ? void 0 : _d.map(function (s) { return s.toJson(); }),
            datums: (_e = this.datums) === null || _e === void 0 ? void 0 : _e.map(function (dat) { return dat.toJson(); }),
            redeemers: (_f = this.redeemers) === null || _f === void 0 ? void 0 : _f.map(function (rdmr) { return rdmr.toJson(); }),
            plutusV2Scripts: (_g = this.plutusV2Scripts) === null || _g === void 0 ? void 0 : _g.map(function (s) { return s.toJson(); }),
            plutusV3Scripts: (_h = this.plutusV3Scripts) === null || _h === void 0 ? void 0 : _h.map(function (s) { return s.toJson(); }),
        };
    };
    ConwayTxWitnessSet.prototype.toCborBytes = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return this.cborRef.toBuffer();
        return this.toCbor().toBuffer();
    };
    ConwayTxWitnessSet.prototype.toCbor = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return new cbor_1.CborString(this.cborRef.toBuffer());
        }
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    ConwayTxWitnessSet.prototype.toCborObj = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return cbor_1.Cbor.parse(this.cborRef.toBuffer());
        }
        return new cbor_1.CborMap([
            this.vkeyWitnesses === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(0),
                    v: new cbor_1.CborArray(this.vkeyWitnesses.map(function (witness) { return witness.toCborObj(); }))
                },
            this.nativeScripts === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(1),
                    v: new cbor_1.CborArray(this.nativeScripts.map(function (nativeScript) { return nativeScript instanceof script_1.Script ?
                        cbor_1.Cbor.parse(nativeScript.cbor) :
                        (0, script_1.nativeScriptToCborObj)(nativeScript); }))
                },
            this.bootstrapWitnesses === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(2),
                    v: new cbor_1.CborArray(this.bootstrapWitnesses.map(function (w) { return w.toCborObj(); }))
                },
            this.plutusV1Scripts === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(3),
                    v: new cbor_1.CborArray(this.plutusV1Scripts
                        .map(function (script) { return cbor_1.Cbor.parse(script.cbor); }))
                },
            this.datums === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(4),
                    v: new cbor_1.CborArray(this.datums.map(plutus_data_1.dataToCborObj))
                },
            this.redeemers === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(5),
                    v: new cbor_1.CborArray(this.redeemers.map(function (r) { return r.toCborObj(); }))
                },
            this.plutusV2Scripts === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(6),
                    v: new cbor_1.CborArray(this.plutusV2Scripts
                        .map(function (script) { return cbor_1.Cbor.parse(script.cbor); }))
                },
            this.plutusV3Scripts === undefined ? undefined :
                {
                    k: new cbor_1.CborUInt(7),
                    v: new cbor_1.CborArray(this.plutusV3Scripts
                        .map(function (script) { return cbor_1.Cbor.parse(script.cbor); }))
                },
        ]
            .filter(function (elem) { return elem !== undefined; }));
    };
    ConwayTxWitnessSet.fromCbor = function (cStr) {
        return ConwayTxWitnessSet.fromCborObj(cbor_1.Cbor.parse((0, cbor_1.forceCborString)(cStr), { keepRef: true }));
    };
    ConwayTxWitnessSet.fromCborObj = function (cObj) {
        var _a;
        if (!(cObj instanceof cbor_1.CborMap
        // && cObj.map.length >= 8
        ))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("ConwayTxWitnessSet");
        var fields = new Array(8).fill(undefined);
        var _loop_1 = function (i) {
            var v = ((_a = cObj.map.find(function (_a) {
                var k = _a.k;
                return k instanceof cbor_1.CborUInt && Number(k.num) === i;
            })) !== null && _a !== void 0 ? _a : { v: undefined }).v;
            if (v === undefined || !(0, cbor_1.isCborObj)(v))
                return "continue";
            fields[i] = v;
        };
        for (var i = 0; i < 8; i++) {
            _loop_1(i);
        }
        var _b = __read(fields, 8), _vkey = _b[0], _native = _b[1], _bootstrap = _b[2], _plutusV1 = _b[3], _dats = _b[4], _reds = _b[5], _plutusV2 = _b[6], _plutusV3 = _b[7];
        // redeemer might be either array or map in conway
        //* TO DO: ASK About Adding Redeemers after dats/ums */
        if (!((_vkey === undefined || (0, getCborSet_1.isCborSet)(_vkey)) &&
            (_native === undefined || (0, getCborSet_1.isCborSet)(_native)) &&
            (_bootstrap === undefined || (0, getCborSet_1.isCborSet)(_bootstrap)) &&
            (_plutusV1 === undefined || (0, getCborSet_1.isCborSet)(_plutusV1)) &&
            (_dats === undefined || (0, getCborSet_1.isCborSet)(_dats)) &&
            (_plutusV2 === undefined || (0, getCborSet_1.isCborSet)(_plutusV2)) &&
            (_plutusV3 === undefined || (0, getCborSet_1.isCborSet)(_plutusV3))))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("ConwayTxWitnessSet");
        return new ConwayTxWitnessSet({
            vkeyWitnesses: _vkey === undefined ? undefined : (0, getCborSet_1.getCborSet)(_vkey).map(VKeyWitness_1.VKeyWitness.fromCborObj),
            nativeScripts: _native === undefined ? undefined :
                (0, getCborSet_1.getCborSet)(_native).map(function (nativeCborObj) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.NativeScript,
                        bytes: cbor_1.Cbor.encode(nativeCborObj).toBuffer()
                    });
                }),
            bootstrapWitnesses: _bootstrap === undefined ? undefined :
                (0, getCborSet_1.getCborSet)(_bootstrap).map(BootstrapWitness_1.BootstrapWitness.fromCborObj),
            plutusV1Scripts: _plutusV1 === undefined ? undefined :
                (0, getCborSet_1.getCborSet)(_plutusV1).map(function (cbor) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV1,
                        bytes: cbor_1.Cbor.encode(cbor).toBuffer()
                    });
                }),
            datums: _dats === undefined ? undefined :
                (0, getCborSet_1.getCborSet)(_dats).map(plutus_data_1.dataFromCborObj),
            redeemers: _reds === undefined ? undefined : witnessRedeemersFromCborObj(_reds),
            plutusV2Scripts: _plutusV2 === undefined ? undefined :
                (0, getCborSet_1.getCborSet)(_plutusV2).map(function (cbor) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV2,
                        bytes: cbor_1.Cbor.encode(cbor).toBuffer()
                    });
                }),
            plutusV3Scripts: _plutusV3 === undefined ? undefined :
                (0, getCborSet_1.getCborSet)(_plutusV3).map(function (cbor) {
                    return new script_1.Script({
                        scriptType: script_1.ScriptType.PlutusV3,
                        bytes: cbor_1.Cbor.encode(cbor).toBuffer()
                    });
                }),
        }, (0, getSubCborRef_1.getSubCborRef)(cObj));
    };
    return ConwayTxWitnessSet;
}());
exports.ConwayTxWitnessSet = ConwayTxWitnessSet;
function witnessRedeemersFromCborObj(cbor) {
    if (cbor instanceof cbor_1.CborArray) {
        return cbor.array.map(ConwayTxRedeemer_1.ConwayTxRedeemer.fromCborObj);
    }
    else if (cbor instanceof cbor_1.CborMap) {
        return cbor.map.map(ConwayTxRedeemer_1.ConwayTxRedeemer.fromCborMapEntry);
    }
    else
        throw new Error("invalid format for witness set redeemers field");
}
