import { CanBeCborString, CborArray, CborObj, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { KesSignature, KesSignatureBytes } from "../../common/Kes.js";
import { ConwayHeaderBody, IConwayHeaderBody } from "./ConwayHeaderBody.js";
import { IPraosHeader } from "../../common/interfaces/IPraosHeader.js";
export interface IConwayHeader {
    body: IConwayHeaderBody;
    kesSignature: KesSignatureBytes;
}
export interface IConwayHeaderChecked {
    body: IConwayHeaderBody;
    kesSignature: KesSignature;
}
export declare function isIConwayHeader(thing: any): thing is IConwayHeaderChecked;
export declare class ConwayHeader implements IConwayHeader, ToCbor, IPraosHeader {
    readonly cborRef: SubCborRef | undefined;
    readonly body: ConwayHeaderBody;
    readonly kesSignature: KesSignature;
    constructor(hdr: IConwayHeader, cborRef?: SubCborRef | undefined);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): ConwayHeader;
    static fromCborObj(cbor: CborObj, _originalBytes?: Uint8Array): ConwayHeader;
}
