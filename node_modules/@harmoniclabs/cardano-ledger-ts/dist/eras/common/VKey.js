"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VKey = void 0;
var crypto_1 = require("@harmoniclabs/crypto");
var PubKeyHash_1 = require("../../credentials/PubKeyHash.js");
var Hash32_1 = require("../../hashes/Hash32/Hash32.js");
var VKey = /** @class */ (function (_super) {
    __extends(VKey, _super);
    function VKey(bs) {
        return _super.call(this, bs) || this;
    }
    Object.defineProperty(VKey.prototype, "hash", {
        get: function () {
            if (this._hash instanceof PubKeyHash_1.PubKeyHash)
                return this._hash;
            this._hash = new PubKeyHash_1.PubKeyHash(Uint8Array.from((0, crypto_1.blake2b_224)(this.toBuffer())));
            return this._hash;
        },
        enumerable: false,
        configurable: true
    });
    return VKey;
}(Hash32_1.Hash32));
exports.VKey = VKey;
;
