import { CborObj } from "@harmoniclabs/cbor";
import { CertAuthCommitteeHot, ICertAuthCommitteeHot } from "../../conway/governance/certs/CertAuthCommitteeHot.js";
import { CertGenesisKeyDelegation, ICertGenesisKeyDelegation } from "../../conway/governance/certs/CertGenesisKeyDelegation.js";
import { CertPoolRegistration, ICertPoolRegistration } from "./CertPoolRegistration.js";
import { CertPoolRetirement, ICertPoolRetirement } from "./CertPoolRetirement.js";
import { CertRegistrationDeposit, ICertRegistrationDeposit } from "../../conway/governance/certs/CertRegistrationDeposit.js";
import { CertRegistrationDrep, ICertRegistrationDrep } from "../../conway/governance/certs/CertRegistrationDrep.js";
import { CertResignCommitteeCold, ICertResignCommitteeCold } from "../../conway/governance/certs/CertResignCommitteeCold.js";
import { CertStakeDeRegistration, ICertStakeDeRegistration } from "./CertStakeDeRegistration.js";
import { CertStakeDelegation, ICertStakeDelegation } from "./CertStakeDelegation.js";
import { CertStakeRegistration, ICertStakeRegistration } from "./CertStakeRegistration.js";
import { CertStakeVoteDeleg, ICertStakeVoteDeleg } from "../../conway/governance/certs/CertStakeVoteDeleg.js";
import { CertStakeVoteRegistrationDeleg, ICertStakeVoteRegistrationDeleg } from "../../conway/governance/certs/CertStakeVoteRegistrationDeleg.js";
import { CertUnRegistrationDeposit, ICertUnRegistrationDeposit } from "../../conway/governance/certs/CertUnRegistrationDeposit.js";
import { CertUnRegistrationDrep, ICertUnRegistrationDrep } from "../../conway/governance/certs/CertUnRegistrationDrep.js";
import { CertUpdateDrep, ICertUpdateDrep } from "../../conway/governance/certs/CertUpdateDrep.js";
import { CertVoteDeleg, ICertVoteDeleg } from "../../conway/governance/certs/CertVoteDeleg.js";
import { CertVoteRegistrationDeleg, ICertVoteRegistrationDeleg } from "../../conway/governance/certs/CertVoteRegistrationDeleg.js";
import { CertificateType } from "./CertificateType.js";
import { IMoveInstantRewardsCert, MoveInstantRewardsCert } from "../../conway/governance/certs/MoveInstantRewardsCert.js";
import { CertStakeRegistrationDeleg, ICertStakeRegistrationDeleg } from "../../conway/governance/certs/CertStakeRegistrationDeleg.js";
export type Certificate = CertStakeRegistration | CertStakeDeRegistration | CertStakeDelegation | CertPoolRegistration | CertPoolRetirement | CertGenesisKeyDelegation | MoveInstantRewardsCert | CertRegistrationDeposit | CertUnRegistrationDeposit | CertVoteDeleg | CertStakeVoteDeleg | CertStakeRegistrationDeleg | CertVoteRegistrationDeleg | CertStakeVoteRegistrationDeleg | CertAuthCommitteeHot | CertResignCommitteeCold | CertRegistrationDrep | CertUnRegistrationDrep | CertUpdateDrep;
export declare function isCertificate(stuff: any): stuff is Certificate;
export declare function certificateFromCborObj(cbor: CborObj): Certificate;
export type CertificateLike = {
    certType: CertificateType.StakeRegistration;
} & ICertStakeRegistration | {
    certType: CertificateType.StakeDeRegistration;
} & ICertStakeDeRegistration | {
    certType: CertificateType.StakeDelegation;
} & ICertStakeDelegation | {
    certType: CertificateType.PoolRegistration;
} & ICertPoolRegistration | {
    certType: CertificateType.PoolRetirement;
} & ICertPoolRetirement | {
    certType: CertificateType.RegistrationDeposit;
} & ICertRegistrationDeposit | {
    certType: CertificateType.UnRegistrationDeposit;
} & ICertUnRegistrationDeposit | {
    certType: CertificateType.VoteDeleg;
} & ICertVoteDeleg | {
    certType: CertificateType.StakeVoteDeleg;
} & ICertStakeVoteDeleg | {
    certType: CertificateType.StakeRegistrationDeleg;
} & ICertStakeRegistrationDeleg | {
    certType: CertificateType.StakeRegistration;
} & ICertStakeRegistration | {
    certType: CertificateType.VoteRegistrationDeleg;
} & ICertVoteRegistrationDeleg | {
    certType: CertificateType.StakeVoteRegistrationDeleg;
} & ICertStakeVoteRegistrationDeleg | {
    certType: CertificateType.AuthCommitteeHot;
} & ICertAuthCommitteeHot | {
    certType: CertificateType.ResignCommitteeCold;
} & ICertResignCommitteeCold | {
    certType: CertificateType.RegistrationDrep;
} & ICertRegistrationDrep | {
    certType: CertificateType.UnRegistrationDrep;
} & ICertUnRegistrationDrep | {
    certType: CertificateType.UpdateDrep;
} & ICertUpdateDrep | {
    certType: CertificateType.GenesisKeyDelegation;
} & ICertGenesisKeyDelegation | {
    certType: CertificateType.MoveInstantRewards;
} & IMoveInstantRewardsCert;
export declare function certificateFromCertificateLike(like: CertificateLike): Certificate;
