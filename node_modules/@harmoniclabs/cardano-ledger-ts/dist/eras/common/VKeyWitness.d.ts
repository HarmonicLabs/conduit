import { ToCbor, SubCborRef, CborString, CborObj, CanBeCborString } from "@harmoniclabs/cbor";
import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { Hash32, Signature } from "../../hashes/index.js";
import { ToJson } from "../../utils/ToJson.js";
import { VKey } from "./VKey.js";
export interface IVkey {
    vkey: Hash32;
    signature: Signature;
}
export declare class VKeyWitness implements ToCbor, Cloneable<VKeyWitness>, ToJson {
    readonly cborRef: SubCborRef | undefined;
    readonly vkey: VKey;
    readonly signature: Signature;
    constructor(vkeys: IVkey, cborRef?: SubCborRef | undefined);
    clone(): VKeyWitness;
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborObj;
    static fromCbor(cStr: CanBeCborString): VKeyWitness;
    static fromCborObj(cObj: CborObj): VKeyWitness;
    toJSON(): {
        vkey: string;
        signature: string;
    };
    toJson(): {
        vkey: string;
        signature: string;
    };
}
