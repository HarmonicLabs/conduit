import { CanBeCborString, CborArray, CborObj, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { KesSignature, KesSignatureBytes } from "../../common/Kes.js";
import { ShelleyHeaderBody, IShelleyHeaderBody } from "./ShelleyHeaderBody.js";
import { IPraosHeader } from "../../common/interfaces/IPraosHeader.js";
export interface IShelleyHeader {
    body: IShelleyHeaderBody;
    kesSignature: KesSignatureBytes;
}
export interface IShelleyHeaderChecked {
    body: IShelleyHeaderBody;
    kesSignature: KesSignature;
}
export declare function isIShelleyHeader(thing: any): thing is IShelleyHeaderChecked;
export declare class ShelleyHeader implements IShelleyHeader, ToCbor, IPraosHeader {
    readonly cborRef: SubCborRef | undefined;
    readonly body: ShelleyHeaderBody;
    readonly kesSignature: KesSignature;
    constructor(hdr: IShelleyHeader, cborRef?: SubCborRef | undefined);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): ShelleyHeader;
    static fromCborObj(cbor: CborObj, _originalBytes?: Uint8Array): ShelleyHeader;
}
