import { CborObj, CborMap } from "@harmoniclabs/cbor";
import { Data } from "@harmoniclabs/plutus-data";
import type { Epoch } from "../../common/ledger/Epoch.js";
import type { Coin } from "../../common/ledger/Coin.js";
import { CanBeUInteger } from "../../../utils/ints.js";
import { Rational, IProtocolVersion } from "../../common/index.js";
export interface ShelleyProtocolParameters {
    txFeePerByte: CanBeUInteger;
    txFeeFixed: CanBeUInteger;
    maxBlockBodySize: CanBeUInteger;
    maxTxSize: CanBeUInteger;
    maxBlockHeaderSize: CanBeUInteger;
    stakeAddressDeposit: Coin;
    stakePoolDeposit: Coin;
    poolRetireMaxEpoch: Epoch;
    stakePoolTargetNum: CanBeUInteger;
    poolPledgeInfluence: Rational;
    monetaryExpansion: Rational;
    treasuryCut: Rational;
    protocolVersion?: IProtocolVersion;
    minPoolCost: Coin;
}
export declare function isShelleyProtocolParameters(something: any): something is ShelleyProtocolParameters;
export declare function isPartialShelleyProtocolParameters(something: object): something is Partial<ShelleyProtocolParameters>;
export declare function partialShelleyProtocolParametersToCborObj(pps: Partial<ShelleyProtocolParameters>): CborMap;
export declare function partialShelleyProtocolParametersToData(pps: Partial<ShelleyProtocolParameters>): Data;
export declare function partialShelleyProtocolParametersFromCborObj(cObj: CborObj): Partial<ShelleyProtocolParameters>;
export declare const defaultShelleyProtocolParameters: ShelleyProtocolParameters;
export declare function partialShelleyProtocolParamsToJson(pp: Partial<ShelleyProtocolParameters>): {
    poolPledgeInfluence: number | undefined;
    monetaryExpansion: number | undefined;
    treasuryCut: number | undefined;
    txFeePerByte?: CanBeUInteger | undefined;
    txFeeFixed?: CanBeUInteger | undefined;
    maxBlockBodySize?: CanBeUInteger | undefined;
    maxTxSize?: CanBeUInteger | undefined;
    maxBlockHeaderSize?: CanBeUInteger | undefined;
    stakeAddressDeposit?: CanBeUInteger | undefined;
    stakePoolDeposit?: CanBeUInteger | undefined;
    poolRetireMaxEpoch?: CanBeUInteger | undefined;
    stakePoolTargetNum?: CanBeUInteger | undefined;
    protocolVersion?: IProtocolVersion | undefined;
    minPoolCost?: CanBeUInteger | undefined;
};
