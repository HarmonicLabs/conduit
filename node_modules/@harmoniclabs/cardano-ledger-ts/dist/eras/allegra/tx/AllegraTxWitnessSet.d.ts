import { ToCbor, SubCborRef, CborString, CborObj, CanBeCborString } from "@harmoniclabs/cbor";
import { Script, ScriptType } from "../../../script/index.js";
import { Hash28 } from "../../../hashes/index.js";
import { VKeyWitness, BootstrapWitness } from "../../common/index.js";
import { ToJson } from "../../../utils/ToJson.js";
export interface IAllegraTxWitnessSet {
    vkeyWitnesses?: VKeyWitness[];
    nativeScripts?: Script<ScriptType.NativeScript>[];
    bootstrapWitnesses?: BootstrapWitness[];
}
export declare function isIAllegraTxWitnessSet(set: object): set is IAllegraTxWitnessSet;
export declare class AllegraTxWitnessSet implements IAllegraTxWitnessSet, ToCbor, ToJson {
    readonly cborRef: SubCborRef | undefined;
    readonly vkeyWitnesses?: VKeyWitness[];
    readonly nativeScripts?: Script<ScriptType.NativeScript>[];
    readonly bootstrapWitnesses?: BootstrapWitness[];
    readonly addVKeyWitness: (vkeyWit: VKeyWitness) => void;
    readonly isComplete: boolean;
    constructor(witnesses: IAllegraTxWitnessSet, cborRef?: SubCborRef | undefined, allRequiredSigners?: Hash28[] | undefined);
    toJSON(): {
        vkeyWitnesses: {
            vkey: string;
            signature: string;
        }[] | undefined;
        nativeScripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.NativeScript;
            description: string;
            cborHex: string;
        })[] | undefined;
        bootstrapWitnesses: {
            pubKey: string;
            signature: string;
            chainCode: string;
            attributes: string;
        }[] | undefined;
    };
    toJson(): {
        vkeyWitnesses: {
            vkey: string;
            signature: string;
        }[] | undefined;
        nativeScripts: (import("../../../script/index.js").ScriptSignature | import("../../../script/index.js").ScriptAll | import("../../../script/index.js").ScriptAny | import("../../../script/index.js").ScriptAtLeast | import("../../../script/index.js").ScriptAfter | import("../../../script/index.js").ScriptBefore | {
            type: ScriptType.NativeScript;
            description: string;
            cborHex: string;
        })[] | undefined;
        bootstrapWitnesses: {
            pubKey: string;
            signature: string;
            chainCode: string;
            attributes: string;
        }[] | undefined;
    };
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborObj;
    static fromCbor(cStr: CanBeCborString): AllegraTxWitnessSet;
    static fromCborObj(cObj: CborObj): AllegraTxWitnessSet;
}
