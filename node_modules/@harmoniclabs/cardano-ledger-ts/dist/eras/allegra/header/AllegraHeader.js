"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllegraHeader = exports.isIAllegraHeader = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var Kes_1 = require("../../common/Kes.js");
var AllegraHeaderBody_1 = require("./AllegraHeaderBody.js");
var getSubCborRef_1 = require("../../../utils/getSubCborRef.js");
function isIAllegraHeader(thing) {
    return (0, obj_utils_1.isObject)(thing) && ((0, AllegraHeaderBody_1.isIAllegraHeaderBody)(thing.body) &&
        (0, Kes_1.isKesSignature)(thing.kesSignature));
}
exports.isIAllegraHeader = isIAllegraHeader;
var AllegraHeader = /** @class */ (function () {
    function AllegraHeader(hdr, cborRef) {
        if (cborRef === void 0) { cborRef = undefined; }
        this.cborRef = cborRef;
        if (!isIAllegraHeader(hdr))
            throw new Error("Invalid AllegraHeader");
        this.body = new AllegraHeaderBody_1.AllegraHeaderBody(hdr.body);
        this.kesSignature = hdr.kesSignature;
    }
    AllegraHeader.prototype.toCborBytes = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return this.cborRef.toBuffer();
        return this.toCbor().toBuffer();
    };
    AllegraHeader.prototype.toCbor = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return new cbor_1.CborString(this.cborRef.toBuffer());
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    /* header = [header_body, body_signature : $kes_signature] */
    AllegraHeader.prototype.toCborObj = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return cbor_1.Cbor.parse(this.cborRef.toBuffer());
        return new cbor_1.CborArray([
            this.body.toCborObj(),
            new cbor_1.CborBytes(this.kesSignature)
        ]);
    };
    AllegraHeader.fromCbor = function (cbor) {
        var bytes = cbor instanceof Uint8Array ? cbor : (0, cbor_1.forceCborString)(cbor).toBuffer();
        return AllegraHeader.fromCborObj(cbor_1.Cbor.parse(bytes, { keepRef: true }), bytes);
    };
    AllegraHeader.fromCborObj = function (cbor, _originalBytes) {
        if (!(cbor instanceof cbor_1.CborArray &&
            cbor.array.length >= 2))
            throw new Error("invalid cbor for AllegraHeader");
        var _a = __read(cbor.array, 2), cHdrBody = _a[0], cBodySignature = _a[1];
        if (!(cBodySignature instanceof cbor_1.CborBytes))
            throw new Error("invalid cbor for AllegraHeader");
        return new AllegraHeader({
            body: AllegraHeaderBody_1.AllegraHeaderBody.fromCborObj(cHdrBody),
            kesSignature: cBodySignature.bytes
        }, (0, getSubCborRef_1.getSubCborRef)(cbor, _originalBytes));
    };
    return AllegraHeader;
}());
exports.AllegraHeader = AllegraHeader;
