"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSubCborRef = getSubCborRef;
exports.subCborRefOrUndef = subCborRefOrUndef;
var cbor_1 = require("@harmoniclabs/cbor");
/**
 * given a @param {CborObj} cObj instance of `CborObj`
 * @returns {SubCborRef} a `SubCborRef` corresponding to the encoded object
 *
 * if `cObj` has a `cborRef` propery instance of `SubCborRef` it will return that property;
 *
 * otherwise it will encode the object and return a new `SubCborRef`
 */
function getSubCborRef(cObj, originalBytes) {
    if (originalBytes === void 0) { originalBytes = undefined; }
    if (cObj.subCborRef instanceof cbor_1.SubCborRef) {
        return cObj.subCborRef.clone(); // does not clone bytes, only the object
    }
    var bytes = originalBytes instanceof Uint8Array ? originalBytes : cbor_1.Cbor.encode(cObj).toBuffer();
    // encoding might have created a new SubCborRef
    if (cObj.subCborRef instanceof cbor_1.SubCborRef) {
        return cObj.subCborRef.clone();
    }
    return new cbor_1.SubCborRef({
        _bytes: bytes,
        start: 0,
        end: bytes.length
    });
}
function subCborRefOrUndef(thing) {
    if (thing instanceof cbor_1.SubCborRef) {
        return thing;
    }
    if (thing.cborRef instanceof cbor_1.SubCborRef) {
        return thing.cborRef.clone();
    }
    return undefined;
}
