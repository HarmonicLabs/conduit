import { CborArray, CborObj, CborString, ToCborObj, ToCborString } from "@harmoniclabs/cbor";
type RawIPv6 = [number, number, number, number];
export declare function isRawIPv6(stuff: any): stuff is RawIPv6;
export interface IPeerAddressIPv6 {
    address: RawIPv6;
    flowInfo?: number | bigint;
    scopeId?: number | bigint;
    portNumber: number | bigint;
}
export declare function isIPeerAddressIPv6(peerAddress: any): peerAddress is IPeerAddressIPv6;
export declare class PeerAddressIPv6 implements IPeerAddressIPv6, ToCborString, ToCborObj {
    readonly address: RawIPv6;
    readonly flowInfo: number | undefined;
    readonly scopeId: number | undefined;
    readonly portNumber: number;
    constructor(newPeerAddress: IPeerAddressIPv6);
    isV13(): boolean;
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCborObj(cbor: CborObj): PeerAddressIPv6;
}
export {};
