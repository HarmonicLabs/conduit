import { CanBeCborString, CborArray, CborObj, CborString, ToCborObj, ToCborString } from "@harmoniclabs/cbor";
import { VersionNumber } from "../../HandshakeVersionTable/VersionNumber.js";
export interface IRefuseReasonHandshakeDecodeError {
    version: VersionNumber;
    decodeError: string;
}
export declare class RefuseReasonHandshakeDecodeError implements ToCborString, ToCborObj, IRefuseReasonHandshakeDecodeError {
    readonly version: VersionNumber;
    readonly decodeError: string;
    readonly isN2N: boolean;
    constructor({ version, decodeError }: IRefuseReasonHandshakeDecodeError, n2n?: boolean);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString, n2n?: boolean): RefuseReasonHandshakeDecodeError;
    static fromCborObj(cbor: CborObj, n2n?: boolean): RefuseReasonHandshakeDecodeError;
}
