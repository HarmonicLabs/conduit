"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRefuseReason = isRefuseReason;
exports.refuseReasonToCbor = refuseReasonToCbor;
exports.refuseReasonToCborObj = refuseReasonToCborObj;
exports.refuseReasonFromCbor = refuseReasonFromCbor;
exports.refuseReasonFromCborObj = refuseReasonFromCborObj;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var cbor_1 = require("@harmoniclabs/cbor");
var RefuseReasonHandshakeDecodeError_1 = require("./RefuseReasonHandshakeDecodeError.js");
var RefuseReasonRefuse_1 = require("./RefuseReasonRefuse.js");
var RefuseReasonVersionMismatch_1 = require("./RefuseReasonVersionMismatch.js");
function isRefuseReason(stuff) {
    return ((0, obj_utils_1.isObject)(stuff) &&
        (stuff instanceof RefuseReasonVersionMismatch_1.RefuseReasonVersionMismatch ||
            stuff instanceof RefuseReasonHandshakeDecodeError_1.RefuseReasonHandshakeDecodeError ||
            stuff instanceof RefuseReasonRefuse_1.RefuseReasonRefuse));
}
function refuseReasonToCbor(refuseReason) {
    return refuseReason.toCbor();
}
function refuseReasonToCborObj(refuseReason) {
    return refuseReason.toCborObj();
}
function refuseReasonFromCbor(cbor, n2n) {
    if (n2n === void 0) { n2n = true; }
    return refuseReasonFromCborObj(cbor_1.Cbor.parse((0, cbor_1.forceCborString)(cbor)), n2n);
}
function refuseReasonFromCborObj(cbor, n2n) {
    if (n2n === void 0) { n2n = true; }
    if (!(cbor instanceof cbor_1.CborArray &&
        cbor.array.length > 0 &&
        cbor.array[0] instanceof cbor_1.CborUInt))
        throw new Error("invalid CBOR for RefuseReason");
    var idx = Number(cbor.array[0].num);
    if (idx === 0)
        return RefuseReasonVersionMismatch_1.RefuseReasonVersionMismatch.fromCborObj(cbor, n2n);
    if (idx === 1)
        return RefuseReasonHandshakeDecodeError_1.RefuseReasonHandshakeDecodeError.fromCborObj(cbor, n2n);
    if (idx === 2)
        return RefuseReasonRefuse_1.RefuseReasonRefuse.fromCborObj(cbor, n2n);
    throw new Error("invalid CBOR for RefuseReason; unknown reason index: " + idx);
}
