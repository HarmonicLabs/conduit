"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.n2nRefuseReasonFromCborObj = exports.n2nRefuseReasonFromCbor = exports.n2nRefuseReasonToCborObj = exports.n2nRefuseReasonToCbor = exports.isN2NRefuseReason = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var cbor_1 = require("@harmoniclabs/cbor");
var N2NRefuseReasonHandshakeDecodeError_1 = require("./N2NRefuseReasonHandshakeDecodeError.js");
var N2NRefuseReasonRefuse_1 = require("./N2NRefuseReasonRefuse.js");
var N2NRefuseReasonVersionMismatch_1 = require("./N2NRefuseReasonVersionMismatch.js");
function isN2NRefuseReason(stuff) {
    return ((0, obj_utils_1.isObject)(stuff) &&
        (stuff instanceof N2NRefuseReasonVersionMismatch_1.N2NRefuseReasonVersionMismatch ||
            stuff instanceof N2NRefuseReasonHandshakeDecodeError_1.N2NRefuseReasonHandshakeDecodeError ||
            stuff instanceof N2NRefuseReasonRefuse_1.N2NRefuseReasonRefuse));
}
exports.isN2NRefuseReason = isN2NRefuseReason;
function n2nRefuseReasonToCbor(n2nRefuseReason) {
    return n2nRefuseReason.toCbor();
}
exports.n2nRefuseReasonToCbor = n2nRefuseReasonToCbor;
function n2nRefuseReasonToCborObj(n2nRefuseReason) {
    return n2nRefuseReason.toCborObj();
}
exports.n2nRefuseReasonToCborObj = n2nRefuseReasonToCborObj;
function n2nRefuseReasonFromCbor(cbor) {
    return n2nRefuseReasonFromCborObj(cbor_1.Cbor.parse((0, cbor_1.forceCborString)(cbor)));
}
exports.n2nRefuseReasonFromCbor = n2nRefuseReasonFromCbor;
function n2nRefuseReasonFromCborObj(cbor) {
    if (!(cbor instanceof cbor_1.CborArray &&
        cbor.array.length > 0 &&
        cbor.array[0] instanceof cbor_1.CborUInt))
        throw new Error("invalid CBOR for N2NRefuseReason");
    var idx = Number(cbor.array[0].num);
    if (idx === 0)
        return N2NRefuseReasonVersionMismatch_1.N2NRefuseReasonVersionMismatch.fromCborObj(cbor);
    if (idx === 1)
        return N2NRefuseReasonHandshakeDecodeError_1.N2NRefuseReasonHandshakeDecodeError.fromCborObj(cbor);
    if (idx === 2)
        return N2NRefuseReasonRefuse_1.N2NRefuseReasonRefuse.fromCborObj(cbor);
    throw new Error("invalid CBOR for N2NRefuseReason; unknown reason index: " + idx);
}
exports.n2nRefuseReasonFromCborObj = n2nRefuseReasonFromCborObj;
