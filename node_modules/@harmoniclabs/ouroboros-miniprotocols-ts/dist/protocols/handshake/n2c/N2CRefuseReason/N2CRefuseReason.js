"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.n2cRefuseReasonFromCborObj = exports.n2cRefuseReasonFromCbor = exports.n2cRefuseReasonToCborObj = exports.n2cRefuseReasonToCbor = exports.isN2CRefuseReason = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var N2CRefuseReasonHandshakeDecodeError_1 = require("./N2CRefuseReasonHandshakeDecodeError.js");
var N2CRefuseReasonRefuse_1 = require("./N2CRefuseReasonRefuse.js");
var N2CRefuseReasonVersionMismatch_1 = require("./N2CRefuseReasonVersionMismatch.js");
var cbor_1 = require("@harmoniclabs/cbor");
function isN2CRefuseReason(stuff) {
    return ((0, obj_utils_1.isObject)(stuff) &&
        (stuff instanceof N2CRefuseReasonVersionMismatch_1.N2CRefuseReasonVersionMismatch ||
            stuff instanceof N2CRefuseReasonHandshakeDecodeError_1.N2CRefuseReasonHandshakeDecodeError ||
            stuff instanceof N2CRefuseReasonRefuse_1.N2CRefuseReasonRefuse));
}
exports.isN2CRefuseReason = isN2CRefuseReason;
function n2cRefuseReasonToCbor(n2cRefuseReason) {
    return n2cRefuseReason.toCbor();
}
exports.n2cRefuseReasonToCbor = n2cRefuseReasonToCbor;
function n2cRefuseReasonToCborObj(n2cRefuseReason) {
    return n2cRefuseReason.toCborObj();
}
exports.n2cRefuseReasonToCborObj = n2cRefuseReasonToCborObj;
function n2cRefuseReasonFromCbor(cbor) {
    return n2cRefuseReasonFromCborObj(cbor_1.Cbor.parse((0, cbor_1.forceCborString)(cbor)));
}
exports.n2cRefuseReasonFromCbor = n2cRefuseReasonFromCbor;
function n2cRefuseReasonFromCborObj(cbor) {
    if (!(cbor instanceof cbor_1.CborArray &&
        cbor.array.length > 0 &&
        cbor.array[0] instanceof cbor_1.CborUInt))
        throw new Error("invalid CBOR for N2CRefuseReason");
    var idx = Number(cbor.array[0].num);
    if (idx === 0)
        return N2CRefuseReasonVersionMismatch_1.N2CRefuseReasonVersionMismatch.fromCborObj(cbor);
    if (idx === 1)
        return N2CRefuseReasonHandshakeDecodeError_1.N2CRefuseReasonHandshakeDecodeError.fromCborObj(cbor);
    if (idx === 2)
        return N2CRefuseReasonRefuse_1.N2CRefuseReasonRefuse.fromCborObj(cbor);
    throw new Error("invalid CBOR for N2CRefuseReason; unknown reason index: " + idx);
}
exports.n2cRefuseReasonFromCborObj = n2cRefuseReasonFromCborObj;
