"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isKeepAliveMessage = isKeepAliveMessage;
exports.isIKeepAliveMessage = isIKeepAliveMessage;
exports.keepAliveMessageFromCbor = keepAliveMessageFromCbor;
exports.keepAliveMessageFromCborObj = keepAliveMessageFromCborObj;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var cbor_1 = require("@harmoniclabs/cbor");
var KeepAliveDone_1 = require("./messages/KeepAliveDone.js");
var KeepAliveResponse_1 = require("./messages/KeepAliveResponse.js");
var KeepAliveRequest_1 = require("./messages/KeepAliveRequest.js");
function isKeepAliveMessage(stuff) {
    return (0, obj_utils_1.isObject)(stuff) && (stuff instanceof KeepAliveRequest_1.KeepAliveRequest ||
        stuff instanceof KeepAliveResponse_1.KeepAliveResponse ||
        stuff instanceof KeepAliveDone_1.KeepAliveDone);
}
function isIKeepAliveMessage(stuff) {
    return (0, obj_utils_1.isObject)(stuff); // empty object satisfies some of the KeepAlive messages
}
function keepAliveMessageFromCbor(cbor) {
    var buff = cbor instanceof Uint8Array ?
        cbor :
        (0, cbor_1.forceCborString)(cbor).toBuffer();
    var msg = keepAliveMessageFromCborObj(cbor_1.Cbor.parse(buff));
    // @ts-ignore Cannot assign to 'cborBytes' because it is a read-only property.ts(2540)
    msg.cborBytes = buff;
    return msg;
}
function keepAliveMessageFromCborObj(cbor) {
    if (!(cbor instanceof cbor_1.CborArray &&
        cbor.array.length >= 1 &&
        cbor.array[0] instanceof cbor_1.CborUInt))
        throw new Error("invalid cbor for 'KeepAliveMessage'");
    var idx = Number(cbor.array[0].num);
    if (idx === 0)
        return KeepAliveRequest_1.KeepAliveRequest.fromCborObj(cbor);
    if (idx === 1)
        return KeepAliveResponse_1.KeepAliveResponse.fromCborObj(cbor);
    if (idx === 2)
        return new KeepAliveDone_1.KeepAliveDone();
    throw new Error("invalid cbor for 'KeepAliveMessage'; unknown index: " + idx);
}
