import { CanBeCborString, CborArray, CborObj, CborString, SubCborRef, ToCbor, ToCborObj } from "@harmoniclabs/cbor";
export interface ITxMonitorReplyNextTx {
    tx?: Uint8Array;
}
export declare function isITxMonitorReplyNextTx(stuff: any): stuff is ITxMonitorReplyNextTx;
export declare class TxMonitorReplyNextTx implements ToCbor, ToCborObj, ITxMonitorReplyNextTx {
    readonly cborRef: SubCborRef | undefined;
    readonly tx?: Uint8Array;
    constructor(msg: ITxMonitorReplyNextTx, cborRef?: SubCborRef | undefined);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): TxMonitorReplyNextTx;
    static fromCborObj(cbor: CborObj, originalBytes?: Uint8Array | undefined): TxMonitorReplyNextTx;
}
