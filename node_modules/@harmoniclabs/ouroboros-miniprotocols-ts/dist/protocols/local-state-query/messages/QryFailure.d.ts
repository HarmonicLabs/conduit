import { CanBeCborString, CborArray, CborObj, CborString, ToCborObj, ToCborString } from "@harmoniclabs/cbor";
export declare enum QryFailureReason {
    pointTooOld = 0,
    pointNotOnChain = 1
}
export declare function isQryFailureReason(stuff: any): stuff is QryFailureReason;
export interface IQryFailure {
    reason: QryFailureReason;
}
export declare class QryFailure implements ToCborString, ToCborObj, IQryFailure {
    readonly reason: QryFailureReason;
    constructor({ reason }: IQryFailure);
    toJSON(): {
        protocol: string;
        message: string;
        data: {
            reason: string;
        };
    };
    toJson(): {
        protocol: string;
        message: string;
        data: {
            reason: string;
        };
    };
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): QryFailure;
    static fromCborObj(cbor: CborObj): QryFailure;
}
