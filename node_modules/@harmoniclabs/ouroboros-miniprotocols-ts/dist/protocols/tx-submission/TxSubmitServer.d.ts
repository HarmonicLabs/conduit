import { TxSubmitMessage } from "./TxSubmitMessage.js";
import { AddEvtListenerOpts } from "../../common/AddEvtListenerOpts.js";
import { TxSubmitReplyIds } from "./messages/TxSubmitReplyIds.js";
import { TxSubmitReplyTxs } from "./messages/TxSubmitReplyTxs.js";
import { Multiplexer } from "../../multiplexer/Multiplexer.js";
import { TxSubmitDone } from "./messages/TxSubmitDone.js";
import { TxSubmitInit } from "./messages/TxSubmitInit.js";
type TxSubmitServerEvt = keyof TxSubmitServerEvtListeners & string;
type TxSubmitServerEvtListeners = {
    init: TxSubmitServerEvtListener[];
    replyIds: TxSubmitServerEvtListener[];
    replyTxs: TxSubmitServerEvtListener[];
    done: TxSubmitServerEvtListener[];
};
type TxSubmitServerEvtListener = (msg: TxSubmitMessage) => void;
type MsgOf<EvtName extends TxSubmitServerEvt> = EvtName extends "init" ? TxSubmitInit : EvtName extends "replyIds" ? TxSubmitReplyIds : EvtName extends "replyTxs" ? TxSubmitReplyTxs : EvtName extends "done" ? TxSubmitDone : never;
type EvtListenerOf<Evt extends TxSubmitServerEvt> = (...args: any[]) => any;
export declare class TxSubmitServer {
    readonly mplexer: Multiplexer;
    private _eventListeners;
    private _onceEventListeners;
    addListener: <EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>) => this;
    on: <EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>) => this;
    once: <EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>) => this;
    removeListener: <EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>) => this;
    off: <EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>) => this;
    removeAllListeners: (event?: TxSubmitServerEvt) => this;
    emit: <EvtName extends TxSubmitServerEvt>(evt: EvtName, msg: MsgOf<EvtName>) => boolean;
    constructor(thisMultiplexer: Multiplexer);
    requestTxIds(requesting: number, acknowleged?: number): Promise<TxSubmitReplyIds>;
    requestTxIds(requesting: number, acknowleged: number | undefined, blocking: false): Promise<TxSubmitReplyIds>;
    requestTxIds(requesting: number, acknowleged: number | undefined, blocking: true): Promise<TxSubmitReplyIds | TxSubmitDone>;
    requestTxs(txHashes: Uint8Array[]): Promise<TxSubmitReplyTxs>;
    hasEventListeners(): boolean;
    addEventListenerOnce<EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>): typeof self;
    addEventListener<EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>, options?: AddEvtListenerOpts): typeof self;
    removeEventListener<EvtName extends TxSubmitServerEvt>(evt: EvtName, listener: EvtListenerOf<EvtName>): typeof self;
    dispatchEvent(evt: TxSubmitServerEvt, msg: TxSubmitMessage): true | undefined;
    clearListeners(evt?: TxSubmitServerEvt): void;
}
export {};
