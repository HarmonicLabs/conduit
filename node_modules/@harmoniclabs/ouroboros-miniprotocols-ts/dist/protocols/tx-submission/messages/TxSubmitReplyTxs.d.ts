import { CanBeCborString, CborArray, CborObj, CborString, SubCborRef, ToCbor, ToCborObj } from "@harmoniclabs/cbor";
export interface ITxSubmitReplyTxs {
    txs: Uint8Array[] | readonly Uint8Array[];
}
export declare function isITxSubmitReplyTx(stuff: any): stuff is ITxSubmitReplyTxs;
export declare class TxSubmitReplyTxs implements ToCbor, ToCborObj, ITxSubmitReplyTxs {
    readonly cborRef: SubCborRef | undefined;
    readonly txs: readonly Uint8Array[];
    constructor(msg: ITxSubmitReplyTxs, cborRef?: SubCborRef | undefined);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): TxSubmitReplyTxs;
    static fromCborObj(cbor: CborObj, originalBytes?: Uint8Array | undefined): TxSubmitReplyTxs;
}
