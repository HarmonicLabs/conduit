import { CanBeCborString, CborArray, CborObj, CborString, ToCborObj, ToCborString } from "@harmoniclabs/cbor";
export interface ITxIdAndSize {
    txId: Uint8Array;
    txSize: number;
}
export declare function isITxIdAndSize(stuff: any): stuff is ITxIdAndSize;
export declare function txIdAndSizeToCborObj({ txId, txSize }: ITxIdAndSize): CborArray;
export declare function txIdAndSizeFromCborObj(cbor: CborObj): ITxIdAndSize;
export interface ITxSubmitReplyIds {
    response: ITxIdAndSize[];
}
export declare function isITxSubmitReplyIds(stuff: any): stuff is TxSubmitReplyIds;
/**
 * The server requests aviable transactions ids
**/
export declare class TxSubmitReplyIds implements ToCborString, ToCborObj, TxSubmitReplyIds {
    readonly response: readonly Readonly<ITxIdAndSize>[];
    constructor({ response }: ITxSubmitReplyIds);
    toCborBytes(): Uint8Array;
    toCbor(): CborString;
    toCborObj(): CborArray;
    static fromCbor(cbor: CanBeCborString): TxSubmitReplyIds;
    static fromCborObj(cbor: CborObj): TxSubmitReplyIds;
}
