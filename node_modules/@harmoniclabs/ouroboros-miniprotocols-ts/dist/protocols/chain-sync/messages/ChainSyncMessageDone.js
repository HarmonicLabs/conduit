"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainSyncMessageDone = void 0;
exports.isIChainSyncMessageDone = isIChainSyncMessageDone;
var cbor_1 = require("@harmoniclabs/cbor");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
function isIChainSyncMessageDone(stuff) {
    return (0, obj_utils_1.isObject)(stuff);
}
var ChainSyncMessageDone = /** @class */ (function () {
    function ChainSyncMessageDone() {
        this.cborRef = undefined;
    }
    ;
    ChainSyncMessageDone.prototype.toJSON = function () { return this.toJson(); };
    ChainSyncMessageDone.prototype.toJson = function () { return {}; };
    ChainSyncMessageDone.prototype.toCborBytes = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return this.cborRef.toBuffer();
        return this.toCbor().toBuffer();
    };
    ChainSyncMessageDone.prototype.toCbor = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return new cbor_1.CborString(this.cborRef.toBuffer());
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    ChainSyncMessageDone.prototype.toCborObj = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return cbor_1.Cbor.parse(this.cborRef.toBuffer());
        return new cbor_1.CborArray([new cbor_1.CborUInt(7)]);
    };
    ChainSyncMessageDone.fromCbor = function (cbor) {
        var buff = cbor instanceof Uint8Array ?
            cbor :
            (0, cbor_1.forceCborString)(cbor).toBuffer();
        return ChainSyncMessageDone.fromCborObj(cbor_1.Cbor.parse(buff), buff);
    };
    ChainSyncMessageDone.fromCborObj = function (cbor, originalBytes) {
        if (originalBytes === void 0) { originalBytes = undefined; }
        if (!(cbor instanceof cbor_1.CborArray &&
            cbor.array[0] instanceof cbor_1.CborUInt &&
            cbor.array[0].num === BigInt(7)))
            throw new Error("invalid CBOR for 'ChainSyncMessageDone");
        return new ChainSyncMessageDone();
    };
    return ChainSyncMessageDone;
}());
exports.ChainSyncMessageDone = ChainSyncMessageDone;
