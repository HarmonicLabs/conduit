"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainSyncAwaitReply = void 0;
exports.isIChainSyncAwaitReply = isIChainSyncAwaitReply;
var cbor_1 = require("@harmoniclabs/cbor");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
;
function isIChainSyncAwaitReply(stuff) {
    return (0, obj_utils_1.isObject)(stuff);
}
var ChainSyncAwaitReply = /** @class */ (function () {
    function ChainSyncAwaitReply(cborRef) {
        if (cborRef === void 0) { cborRef = undefined; }
        this.cborRef = cborRef;
    }
    ;
    ChainSyncAwaitReply.prototype.toJSON = function () { return this.toJson(); };
    ChainSyncAwaitReply.prototype.toJson = function () { return {}; };
    ChainSyncAwaitReply.prototype.toCborBytes = function () {
        // if( this.cborRef instanceof SubCborRef ) return this.cborRef.toBuffer();
        return this.toCbor().toBuffer();
    };
    ChainSyncAwaitReply.prototype.toCbor = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return new cbor_1.CborString(this.cborRef.toBuffer());
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    ChainSyncAwaitReply.prototype.toCborObj = function () {
        if (this.cborRef instanceof cbor_1.SubCborRef)
            return cbor_1.Cbor.parse(this.cborRef.toBuffer());
        return new cbor_1.CborArray([new cbor_1.CborUInt(1)]);
    };
    ChainSyncAwaitReply.fromCbor = function (cbor) {
        var buff = cbor instanceof Uint8Array ?
            cbor :
            (0, cbor_1.forceCborString)(cbor).toBuffer();
        return ChainSyncAwaitReply.fromCborObj(cbor_1.Cbor.parse(buff));
    };
    ChainSyncAwaitReply.fromCborObj = function (cbor) {
        if (!(cbor instanceof cbor_1.CborArray &&
            cbor.array[0] instanceof cbor_1.CborUInt &&
            cbor.array[0].num === BigInt(1)))
            throw new Error("invalid CBOR for 'ChainSyncAwaitReply");
        return new ChainSyncAwaitReply();
    };
    return ChainSyncAwaitReply;
}());
exports.ChainSyncAwaitReply = ChainSyncAwaitReply;
